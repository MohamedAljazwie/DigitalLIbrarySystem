database name  digitalibrary
        password digitallibrary


CREATE TABLE "LMSLOGIN"
(
ID NUMBER(10) CONSTRAINT "LMSLOGIN_ID_NK" NOT NULL                    ,
USERNAME VARCHAR2(100) CONSTRAINT "LMSLOGIN_USERNAME_NK" NOT NULL     ,
PASSWORD VARCHAR2(100) CONSTRAINT "LMSLOGIN_PASSWORD_NK" NOT NULL     ,
"ROLE"  VARCHAR2(50) CONSTRAINT "LMSLOGIN_ROLE_NK" NOT NULL           ,
CONSTRAINT "LMSLOGIN_ID_PK" PRIMARY KEY("ID")                         ,
CONSTRAINT "LMSLOGIN_USERNAME_UK" UNIQUE("USERNAME")                    
)
CREATE SEQUENCE "LMSLOGINID"
START WITH 100
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER

CREATE trigger "BI_TET"  
  before insert on "TET"              
  for each row 
begin  
    select "LMSLOGINID".nextval into :NEW.ID from dual;
end;
         ------------------------------------------------------------------
CREATE TABLE "ADDRESS"
(
"ID" NUMBER CONSTRAINT "ADDRESS_ID_NK" NOT NULL  ,
"CITY" VARCHAR2(50)   ,
"COUNTRY" VARCHAR2(50) ,
CONSTRAINT "ADDRESS_ID_PK" PRIMARY KEY("ID") 
)
CREATE SEQUENCE "LMSADDRESSID"
START WITH 100
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER


CREATE trigger "BI_ADDRESS"  
  before insert on "ADDRESS"              
  for each row 
begin  
    select "LMSADDRESSID".nextval into :NEW.ID from dual;
end;


   ------------------------------------------------------------

CREATE TABLE "PUBLISHER"
(
"PUBLISH_ID" NUMBER CONSTRAINT "PUBLISHER_PUBLISID_NK" NOT NULL   ,
"PUBLISHER_NAME" VARCHAR2(100) CONSTRAINT "PUBLISHER_PUBNAME_NK" NOT NULL ,
"PUBLISHER_EMAIL" VARCHAR2(100) CONSTRAINT "PUBLISHER_PUBEMAIL_NK" NOT NULL ,
"PUBLISHER_ADDRESS" NUMBER  ,
CONSTRAINT "PUBLISHER_PUBID_PK" PRIMARY KEY("PUBLISH_ID")  ,
CONSTRAINT "PUBLISHER_PUBEMAIL_UK" UNIQUE("PUBLISHER_EMAIL") ,
CONSTRAINT "PUBLISHER_PUBADDRESS_FK" FOREIGN KEY("PUBLISHER_ADDRESS") REFERENCES ADDRESS("ID")
)


CREATE SEQUENCE "LMSPUBLISHERID"
START WITH 100
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER


CREATE trigger "BI_PUBLISHER"  
  before insert on "PUBLISHER"              
  for each row 
begin  
    select "LMSPUBLISHERID".nextval into :NEW.PUBLISH_ID from dual;
end;

---------------------------------------------------------

CREATE TABLE "PUBLISHER_PHONE"
(
"PUBLISHER_ID" NUMBER  CONSTRAINT "PUBLISHER_PHONE_ID_NK" NOT NULL  ,
"PHONE_NUMBER" NUMBER CONSTRAINT "PUBLISHER_PHONE_NUMBER_NK" NOT NULL ,
CONSTRAINT "PUBLISHER_PHONE_NUMBER_UK" UNIQUE("PHONE_NUMBER")  ,
CONSTRAINT "PUBLISHER_PHONE_ID_FK" FOREIGN KEY("PUBLISHER_ID") REFERENCES PUBLISHER("PUBLISH_ID"),
CONSTRAINT "PUBLISHER_PHONE_PK" PRIMARY KEY("PUBLISHER_ID","PHONE_NUMBER")
)
ALTER TABLE "PUBLISHER_PHONE"
DROP CONSTRAINT "PUBLISHER_PHONE_ID_FK"

ALTER TABLE "PUBLISHER_PHONE"
ADD CONSTRAINT "PUBLISHER_PHONE_ID_FK" FOREIGN KEY("PUBLISHER_ID") REFERENCES PUBLISHER("PUBLISH_ID") ON DELETE CASCADE
                   -----------------------------------------------


CREATE TABLE  "AUTHOR" 
   (	"AUTHOR_ID" NUMBER CONSTRAINT "AUTHOR_AUTHLISID_NK" NOT NULL ENABLE, 
	"AUTHOR_NAME" VARCHAR2(100) CONSTRAINT "AUTHOR_AUTHNAME_NK" NOT NULL ENABLE, 
	"AUTHOR_EMAIL" VARCHAR2(100) CONSTRAINT "AUTHOR_AUTHEMAIL_NK" NOT NULL ENABLE, 
	"AUTHOR_ADDRESS" VARCHAR2(400), 
	 CONSTRAINT "AUTHOR_AUTHID_PK" PRIMARY KEY ("AUTHOR_ID") ENABLE, 
	 CONSTRAINT "AUTHOR_AUTHEMAIL_UK" UNIQUE ("AUTHOR_EMAIL") ENABLE
   )

CREATE SEQUENCE "LMSAUTHORID"
START WITH 100
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER

CREATE OR REPLACE TRIGGER  "BI_AUTHOR" 
  before insert on "AUTHOR"              
  for each row 
begin  
    select "LMSAUTHORID".nextval into :NEW.AUTHOR_ID from dual;
end;



---------------------------------------------------------
CREATE TABLE  "QUALIFICATIONS" 
   (	"AUTHOR_ID" NUMBER CONSTRAINT "QUALIFICATIONS_ID_NK" NOT NULL ENABLE, 
	"QUALIFICATION" VARCHAR2(100), 
	 CONSTRAINT "QUALIFICATIONS_PK" PRIMARY KEY ("AUTHOR_ID", "QUALIFICATION") ENABLE, 
	 CONSTRAINT "QUALIFICATIONS_ID_FK" FOREIGN KEY ("AUTHOR_ID")
	  REFERENCES  "AUTHOR" ("AUTHOR_ID") ON DELETE CASCADE ENABLE
   )

---------------------------------------------------------
CREATE TABLE  "AUTHOR_PHONE" 
   (	"AUTHOR_ID" NUMBER CONSTRAINT "AUTHOR_PHONE_ID_NK" NOT NULL ENABLE, 
	"PHONE_NUMBER" NUMBER CONSTRAINT "AUTHOR_PHONE_NUMBER_NK" NOT NULL ENABLE, 
	 CONSTRAINT "AUTHOR_PHONE_PK" PRIMARY KEY ("AUTHOR_ID", "PHONE_NUMBER") ENABLE, 
	 CONSTRAINT "AUTHOR_PHONE_NUMBER_UK" UNIQUE ("PHONE_NUMBER") ENABLE, 
	 CONSTRAINT "AUTHOR_PHONE_ID_FK" FOREIGN KEY ("AUTHOR_ID")
	  REFERENCES  "AUTHOR" ("AUTHOR_ID") ON DELETE CASCADE ENABLE
   )
   
   -----------------------------------------------


CREATE TABLE  "STUDENT" 
   (	"STUDENT_ID" NUMBER CONSTRAINT "STUDENT_STID_NK" NOT NULL ENABLE, 
	"STUDENT_NATIONALID" NUMBER CONSTRAINT "STUDENT_STNATIONALID_NK" NOT NULL ENABLE, 
	"STUDENT_NAME" VARCHAR2(100) CONSTRAINT "STUDENT_STNAME_NK" NOT NULL ENABLE, 
	"STUDENT_EMAIL" VARCHAR2(100) CONSTRAINT "STUDENT_STEMAIL_NK" NOT NULL ENABLE, 
	"STUDENT_ADDRESS" VARCHAR2(400), 
	"USER_NAME" VARCHAR2(100) CONSTRAINT "STUDENT_USER_NAME_NK" NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(100) CONSTRAINT "STUDENT_PASSWORD_NK" NOT NULL ENABLE, 
	"QUESTION" VARCHAR2(400) NOT NULL ENABLE, 
	"ANSWER" VARCHAR2(400) NOT NULL ENABLE, 
	 CONSTRAINT "STUDENT_STID_PK" PRIMARY KEY ("STUDENT_ID") ENABLE, 
	 CONSTRAINT "STUDENT_STEMAIL_UK" UNIQUE ("STUDENT_EMAIL") ENABLE, 
	 CONSTRAINT "STUDENT_STNATIONALID_UK" UNIQUE ("STUDENT_NATIONALID") ENABLE, 
	 CONSTRAINT "STUDENT_USER_NAME_UQ" UNIQUE ("USER_NAME") ENABLE
   )

CREATE SEQUENCE "LMSSTUDENTID"
START WITH 100
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER


CREATE OR REPLACE TRIGGER  "BI_STUDENT" 
  before insert on "STUDENT"              
  for each row 
begin  
    select "LMSSTUDENTID".nextval into :NEW.STUDENT_ID from dual;
end;

---------------------------------------------------------
CREATE TABLE  "STUDENT_PHONE" 
   (	"STUDENT_ID" NUMBER CONSTRAINT "STUDENT_PHONE_ID_NK" NOT NULL ENABLE, 
	"PHONE_NUMBER" NUMBER CONSTRAINT "STUDENT_PHONE_NUMBER_NK" NOT NULL ENABLE, 
	 CONSTRAINT "STUDENT_PHONE_PK" PRIMARY KEY ("STUDENT_ID", "PHONE_NUMBER") ENABLE, 
	 CONSTRAINT "STUDENT_PHONE_NUMBER_UK" UNIQUE ("PHONE_NUMBER") ENABLE, 
	 CONSTRAINT "STUDENT_PHONE_ID_FK" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES  "STUDENT" ("STUDENT_ID") ON DELETE CASCADE ENABLE
   )
               -------------------------------------------

CREATE TABLE  "BOOK" 
   (	"BOOK_ID" NUMBER CONSTRAINT "BOOK_BOOKID_NK" NOT NULL ENABLE, 
	"BOOK_ISBN" VARCHAR2(50) CONSTRAINT "BOOK_BOOKISBN_NK" NOT NULL ENABLE, 
	"BOOK_TITLE" VARCHAR2(200) CONSTRAINT "BOOK_BOOK_TITLE_NK" NOT NULL ENABLE, 
	"SUBJECT" VARCHAR2(200) CONSTRAINT "BOOK_SUBJECT_NK" NOT NULL ENABLE, 
	"PRICE" VARCHAR2(20) CONSTRAINT "BOOK_PRICE_NK" NOT NULL ENABLE, 
	"CATEGORY_ID" NUMBER CONSTRAINT "BOOK_CATEGORYID_NK" NOT NULL ENABLE, 
	"PUBLISH_DATE" VARCHAR2(50) CONSTRAINT "BOOK_PUBLISHDATE_NK" NOT NULL ENABLE, 
	"QUANTITY" NUMBER CONSTRAINT "BOOK_QUANTITY_NK" NOT NULL ENABLE, 
	"AVAILABLE_BOOKS" NUMBER CONSTRAINT "BOOK_AVAILABILITY_NK" NOT NULL ENABLE, 
	"BORROWED_BOOKS" NUMBER CONSTRAINT "BOOK BORROWED_NK" NOT NULL ENABLE, 
	"REGISTERED_DATE" VARCHAR2(50) DEFAULT TO_CHAR(SYSDATE,'dd-MONTH-yyyy') CONSTRAINT "BOOK_REGISTERED_DATE_NK" NOT NULL ENABLE, 
	 CONSTRAINT "BOOK_ID_PK" PRIMARY KEY ("BOOK_ID") ENABLE, 
	 CONSTRAINT "BOOK_ISBN_UK" UNIQUE ("BOOK_ISBN") ENABLE, 
	 CONSTRAINT "BOOK_CATID_FK" FOREIGN KEY ("CATEGORY_ID")
	  REFERENCES  "CATEGORY" ("CATEGORY_ID") ENABLE
   )
   
CREATE SEQUENCE "LMSBOOKID"
START WITH 100
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER


CREATE OR REPLACE TRIGGER  "BI_BOOK" 
  before insert on "BOOK"              
  for each row 
begin  
    select "LMSBOOKID".nextval into :NEW.BOOK_ID from dual;
end;

                  ---------------------------------------------

CREATE TABLE  "CATEGORY" 
   (	"CATEGORY_ID" NUMBER CONSTRAINT "CATEGORY_CATID_NK" NOT NULL ENABLE, 
	"CATEGORY_NAME" VARCHAR2(100) CONSTRAINT "CATEGORY_CATNAME_NK" NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(4000), 
	"SUPER_CATEGORY" NUMBER, 
	 CONSTRAINT "CATEGORY_ID_PK" PRIMARY KEY ("CATEGORY_ID") ENABLE, 
	 CONSTRAINT "CATEGORY_CATNAME_UK" UNIQUE ("CATEGORY_NAME") ENABLE, 
	 CONSTRAINT "CATEGORY_ID_FK" FOREIGN KEY ("SUPER_CATEGORY")
	  REFERENCES  "CATEGORY" ("CATEGORY_ID") ENABLE
   )


CREATE SEQUENCE "LMSCATEGORYID"
START WITH 100
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER


CREATE OR REPLACE TRIGGER  "BI_CATEGORY" 
  before insert on "CATEGORY"              
  for each row 
begin  
    select "LMSCATEGORYID".nextval into :NEW.CATEGORY_ID from dual;
end;


               -------------------------------------------------
CREATE TABLE  "BOOK_AUTHOR" 
   (	"BOOK_ID" NUMBER CONSTRAINT "BOOK_AUTHOR_BOOKID_NK" NOT NULL ENABLE, 
	"AUTHOR_ID" NUMBER CONSTRAINT "BOOK_AUTHOR_AUTHID_NK" NOT NULL ENABLE, 
	 CONSTRAINT "BOOK_AUTHOR_PK" PRIMARY KEY ("BOOK_ID", "AUTHOR_ID") ENABLE, 
	 CONSTRAINT "BOOK_AUTHOR_BOOK_ID_FK" FOREIGN KEY ("BOOK_ID")
	  REFERENCES  "BOOK" ("BOOK_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "BOOK_AUTHOR_AUTHOR_ID_FK" FOREIGN KEY ("AUTHOR_ID")
	  REFERENCES  "AUTHOR" ("AUTHOR_ID") ON DELETE CASCADE ENABLE
   )

               -------------------------------------------------

CREATE TABLE  "BOOK_PUBLISHER" 
   (	"BOOK_ID" NUMBER CONSTRAINT "BOOK_PUBLISHER_BOOKID_NK" NOT NULL ENABLE, 
	"PUBLISHER_ID" NUMBER CONSTRAINT "BOOK_PUBLISHER_AUTHID_NK" NOT NULL ENABLE, 
	 CONSTRAINT "BOOK_PUBLISHER_PK" PRIMARY KEY ("BOOK_ID", "PUBLISHER_ID") ENABLE, 
	 CONSTRAINT "BOOK_PUBLISHER_BOOK_ID_FK" FOREIGN KEY ("BOOK_ID")
	  REFERENCES  "BOOK" ("BOOK_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "BOOK_PUBLISHER_PUBLISHER_ID_FK" FOREIGN KEY ("PUBLISHER_ID")
	  REFERENCES  "PUBLISHER" ("PUBLISH_ID") ON DELETE CASCADE ENABLE
   )


-----------------------------------------------------
CREATE TABLE  "MAILS" 
   (	"MAIL_ID" NUMBER CONSTRAINT "MAILS_MAIL_ID_NK" NOT NULL ENABLE, 
	"STUDENT_ID" NUMBER CONSTRAINT "MAILS_STUDENT_ID_NK" NOT NULL ENABLE, 
	"TITLE" VARCHAR2(100) CONSTRAINT "MAILS_TITLE_NK" NOT NULL ENABLE, 
	"CONTENT" VARCHAR2(4000) CONSTRAINT "MAILS_MESSAGE_NK" NOT NULL ENABLE, 
	 CONSTRAINT "MAILS_ID_PK" PRIMARY KEY ("MAIL_ID") ENABLE, 
	 CONSTRAINT "MAILS_STUDENT_ID_FK" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES  "STUDENT" ("STUDENT_ID") ON DELETE CASCADE ENABLE
   )

CREATE SEQUENCE "LMSMAILSID"
START WITH 100
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER

CREATE OR REPLACE TRIGGER  "BI_MAILS" 
  before insert on "MAILS"              
  for each row 
begin  
    select "LMSMAILSID".nextval into :NEW.MAIL_ID from dual;
end;

                     ----------------------------------------
CREATE TABLE  "FINE" 
   (	"FINE_ID" NUMBER CONSTRAINT "FINE_FINEID_NK" NOT NULL ENABLE, 
	"STUDENT_ID" NUMBER CONSTRAINT "FINE_STUDENTID_NK" NOT NULL ENABLE, 
	"FINE_DATE" VARCHAR2(50) CONSTRAINT "FINE_FINEDATE_NK" NOT NULL ENABLE, 
	"COST" VARCHAR2(10) CONSTRAINT "FINE_COST_NK" NOT NULL ENABLE, 
	"TOTAL_COST" VARCHAR2(10) CONSTRAINT "FINE_MODE_PAY_NK" NOT NULL ENABLE, 
	"MODE_OF_PAY" VARCHAR2(30) CONSTRAINT "FINE_REMARK_NK" NOT NULL ENABLE, 
	"REMARK" VARCHAR2(4000), 
	 CONSTRAINT "FINE_ID_PK" PRIMARY KEY ("FINE_ID") ENABLE, 
	 CONSTRAINT "FINE_STUDENT_ID_FK" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES  "STUDENT" ("STUDENT_ID") ON DELETE CASCADE ENABLE
   )


CREATE SEQUENCE "LMSFINEID"
START WITH 10000
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER


CREATE OR REPLACE TRIGGER  "BI_FINE" 
  before insert on "FINE"              
  for each row 
begin  
    select "LMSFINEID".nextval into :NEW.FINE_ID from dual;
end;

                     ----------------------------------------

CREATE TABLE  "ISSUES_BOOK" 
   (	"ISSUE_ID" NUMBER CONSTRAINT "ISSUES_BOOK_ISSID_NK" NOT NULL ENABLE, 
	"STUDENT_ID" NUMBER CONSTRAINT "ISSUES_BOOK_STID_NK" NOT NULL ENABLE, 
	"BOOK_ID" NUMBER CONSTRAINT "ISSUES_BOOK_BOOKID_NK" NOT NULL ENABLE, 
	"ISSUE_DATE" VARCHAR2(50) CONSTRAINT "ISUES_BOOK_ISSDATE_NK" NOT NULL ENABLE, 
	"RETURN_DATE" VARCHAR2(50) DEFAULT '07/25/2016' CONSTRAINT "ISSUE_BOOK_RETURNDATE_NK" NOT NULL ENABLE, 
	"STATUS" VARCHAR2(20) DEFAULT 'issued' CONSTRAINT "ISSUE_BOOK_STATUS_NK" NOT NULL ENABLE, 
	"NOTES" VARCHAR2(4000) DEFAULT 'no Notes', 
	 CONSTRAINT "ISSUES_BOOK_ID_PK" PRIMARY KEY ("ISSUE_ID") ENABLE, 
	 CONSTRAINT "ISSUES_BOOK_STUDENT_ID_FK" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES  "STUDENT" ("STUDENT_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "ISSUES_BOOK_BOOK_ID_FK" FOREIGN KEY ("BOOK_ID")
	  REFERENCES  "BOOK" ("BOOK_ID") ON DELETE CASCADE ENABLE
   )

CREATE SEQUENCE "LMSIDDUEWSBOOKID"
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER



CREATE OR REPLACE TRIGGER  "BI_ISSUESBOOK" 
  before insert on "ISSUES_BOOK"              
  for each row 
begin  
    select "LMSIDDUEWSBOOKID".nextval into :NEW.ISSUE_ID from dual;
end;

                   ---------------------------------------------------
CREATE TABLE  "RETURN_BOOK" 
   (	"RETURN_ID" NUMBER CONSTRAINT "RETURN_BOOK_ISSID_NK" NOT NULL ENABLE, 
	"STUDENT_ID" NUMBER CONSTRAINT "RETURN_BOOK_STID_NK" NOT NULL ENABLE, 
	"BOOK_ID" NUMBER CONSTRAINT "RETURN_BOOK_BOOKID_NK" NOT NULL ENABLE, 
	"ISSUE_DATE" VARCHAR2(50) CONSTRAINT "RETURN_BOOK_RETDATE_NK" NOT NULL ENABLE, 
	"RETURN_DATE" VARCHAR2(50), 
	"RETURNED_DATE" VARCHAR2(50) DEFAULT '07/27/2016' CONSTRAINT "RETURN_BOOK_RETURNEDDATE_NK" NOT NULL ENABLE, 
	"NOTES" VARCHAR2(4000) DEFAULT 'no Notes', 
	 CONSTRAINT "RETURN_BOOK_ID_PK" PRIMARY KEY ("RETURN_ID") ENABLE, 
	 CONSTRAINT "RETURN_BOOK_STUDENT_ID_FK" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES  "STUDENT" ("STUDENT_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "RETURN_BOOK_BOOK_ID_FK" FOREIGN KEY ("BOOK_ID")
	  REFERENCES  "BOOK" ("BOOK_ID") ON DELETE CASCADE ENABLE
   )


CREATE SEQUENCE "LMSRETURNBOOKID"
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE
ORDER

CREATE OR REPLACE TRIGGER  "BI_RETURNBOOK" 
  before insert on "RETURN_BOOK"              
  for each row 
begin  
    select "LMSRETURNBOOKID".nextval into :NEW.RETURN_ID from dual;
end;

                   ---------------------------------------------------


